"use client";

import React, { useState, ChangeEvent } from "react";
import InputWithButtonOne from "../../molecules/InputWithButtonOne";
import Text from "../../atoms/Text/InfoText";
import AuthWithText from "@/components/molecules/AuthWithText";
import WatchList from "@/components/molecules/WatchList";
import watchListData from "@/constants/watchListData";
import SendBtn from "@/components/atoms/button/SendBtn";

export default function DataFetcher() {
  const [inputValueOne, setInputValueOne] = useState<string>("");
  const [inputValueTwo, setInputValueTwo] = useState<string>("");
  const [apple, setApple] = useState<{ [index: number]: string }[]>([]);
  const [buttonStates, setButtonStates] = useState(watchListData);

  //ÌôúÏÑ±ÌôîÎêú Î≤ÑÌäº Ï≤¥ÌÅ¨ Î∞è ÏñëÏãùÏóê ÎßûÏ∂∞, Ï†ÅÏö©
  const handleToggle = (index: number) => {
    const updatedButtons = buttonStates.map((button, i) =>
      i === index ? { ...button, isActive: !button.isActive } : button
    );
    setButtonStates(updatedButtons);

    const activeButtons = updatedButtons.filter((button) => button.isActive);
    const formattedActiveButtons = activeButtons.reduce((acc, cur) => {
      acc[cur.index] = cur.label;
      return acc;
    }, {} as { [index: number]: string });
    setApple([formattedActiveButtons]);
  };

  //input Í∞í Ï∂îÏ†Å
  const handleChangeOne = (event: ChangeEvent<HTMLInputElement>) => {
    setInputValueOne(event.target.value);
  };

  const handleChangeTwo = (event: ChangeEvent<HTMLInputElement>) => {
    setInputValueTwo(event.target.value);
  };

  const fetchData = () => {
    // Ïù¥ Î∂ÄÎ∂ÑÏóê API Ìò∏Ï∂ú Î°úÏßÅ
    console.log(inputValueOne, inputValueTwo);
    console.log(apple);
  };

  return (
    <>
      <div>
        <AuthWithText title="ÏïÑÏù¥Îîî(Ïù¥Î©îÏùº)" value="Í∞í" />
      </div>
      <div>
        <AuthWithText title="Ïù¥Î¶Ñ" value="Í∞í" />
      </div>
      <Text title="Ï†ÑÌôîÎ≤àÌò∏" />
      <div>
        <InputWithButtonOne
          value={inputValueOne}
          onChange={handleChangeOne}
          onClick={fetchData}
          buttonText="Ï†ÑÏÜ°"
        />
      </div>
      <Text title="Ïù∏Ï¶ù" />
      <div>
        <InputWithButtonOne
          value={inputValueTwo}
          onChange={handleChangeTwo}
          onClick={fetchData}
          buttonText="Ï†ÑÏÜ°"
        />
      </div>

      {/* Í¥ÄÏã¨Î™©Î°ù */}
      <Text title="Í¥ÄÏã¨Î™©Î°ùÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöîüôå" />
      <WatchList buttons={buttonStates} onClick={handleToggle} />
      <SendBtn onClick={fetchData} buttonText="Í∞ÄÏûÖÌïòÍ∏∞" />
    </>
  );
}
