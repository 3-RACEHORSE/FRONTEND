import Image from "next/image";
// import { auth } from "@/auth"; // auth Ï∂îÍ∞Ä
import Header from "@/components/organism/layout/Header";
import NavBar from "@/components/organism/layout/NavBar";
import MainBanner from "@/app/(commonAccess)/_main/MainBanner";
import MainArticle from "@/components/organism/layout/MainArticle";
import styles from "@/styles/main/main.module.scss";
import BoardTitle from "@/components/organism/main/BoardTitle";
import SimpleBoardObject from "@/components/organism/main/SimpleBoardObject";
import CategoryText from "@/components/atoms/Text/CategoryText";
import Footer from "@/components/organism/layout/Footer";
import { auth } from "@/auth";

async function getMainStatistic() {
  const res = await fetch(
    `${process.env.NEXT_PUBLIC_REACT_APP_API_URL}/auction-service/api/v1/non-authorization/auction/statistic`,
    {
      next: { revalidate: 86400 },
    }
  );
  if (!res.ok) {
    throw new Error("Network Error");
  }
  const data = await res.json();
  return data;
}

async function getMainHotActionList() {
  const res = await fetch(
    `${process.env.NEXT_PUBLIC_REACT_APP_API_URL}/auction-service/api/v1/non-authorization/auction/hot-auction`
  );
  if (!res.ok) {
    throw new Error("Network Error");
  }
  const data = await res.json();
  return data;
}

async function getMainHighBiddingList() {
  const res = await fetch(
    `${process.env.NEXT_PUBLIC_REACT_APP_API_URL}/auction-service/api/v1/non-authorization/auction/high-bidding-statistics`
  );
  if (!res.ok) {
    throw new Error("Network Error");
  }
  const data = await res.json();
  return data;
}

async function getMainSameCategoryList() {
  const res = await fetch(
    `${process.env.NEXT_PUBLIC_REACT_APP_API_URL}/auction-service/api/v1/non-authorization/auction/category-hot-auction`
  );
  if (!res.ok) {
    throw new Error("Network Error");
  }
  const data = await res.json();
  return data;
}

export default async function Home() {
  // const session = await auth(); // session Ìò∏Ï∂ú Ï∂îÍ∞Ä
  // console.log(session);
  const data1 = await getMainStatistic();
  const data2 = await getMainHotActionList();
  const data3 = await getMainHighBiddingList();
  const data4 = await getMainSameCategoryList();

  return (
    <main>
      <Header />
      <MainBanner />
      <MainArticle data={data1} />
      <div className={styles["infoBar"]}>
        <div className={styles["infoText"]}>Í≤ΩÎß§ ÌÜµÍ≥Ñ(Í∏àÏùº)</div>
        <div className={styles["detailLink"]}>ÏÉÅÏÑ∏Î≥¥Í∏∞</div>
      </div>

      {/* Ïä§ÌÅ¨Î°§1  */}
      <BoardTitle
        title="HOT Í≤ΩÎß§Í∏Ä üì¢"
        detail="ÏßÄÍ∏à Í∞ÄÏû• Ïù∏Í∏∞ÏûàÎäî Í≤ΩÎß§Í∏ÄÏùÑ Ï∞æÏïÑÎ≥¥ÏÑ∏Ïöî!"
      />

      <div className="flex flex-col justify-center w-full h-200">
        <ul className="flex overflow-x-auto">
          {data2.map((item: any) => (
            <SimpleBoardObject
              key={item.auctionUuid}
              category={item.category}
              title={item.title}
              content={item.content}
              src={item.thumbnail}
              minPrice={item.minimumBiddingPrice.toLocaleString()}
            />
          ))}
        </ul>
      </div>

      {/* Ïä§ÌÅ¨Î°§2  */}
      <BoardTitle
        title="ÎÜíÏùÄ ÏûÖÏ∞∞Í∞Ä Í≤ΩÎß§Í∏Ä üì¢"
        detail="Ï†ÑÏ≤¥ Í≤ΩÎß§ÏóêÏÑú TOP10ÏùÑ ÌôïÏù∏ÌïòÏÑ∏Ïöî!"
      />
      <div className="flex flex-col justify-center w-full h-200">
        <ul className="flex overflow-x-auto">
          {data3.map((item: any) => (
            <SimpleBoardObject
              key={item.auctionUuid}
              category={item.category}
              title={item.title}
              content={item.content}
              src={item.thumbnail}
              minPrice={item.minimumBiddingPrice.toLocaleString()}
            />
          ))}
        </ul>
      </div>

      {/* Ïä§ÌÅ¨Î°§2  */}
      <BoardTitle
        title="ÏöîÏ¶ò Îú®Îäî Î∂ÑÏïº üì¢"
        detail="ÎÇòÎèÑ Ïò§ÎäòÎ∂ÄÌÑ∞ Í∞úÎ∞úÏûê! Îß•Î∂Å ÏÇ¨Îü¨Í∞ÄÏûê~"
      />
      <div className="flex flex-col justify-center w-full h-200">
        <ul className="flex overflow-x-auto">
          {data4.map((item: any) => (
            <SimpleBoardObject
              key={item.auctionUuid}
              category={item.category}
              title={item.title}
              content={item.content}
              src={item.thumbnail}
              minPrice={item.minimumBiddingPrice.toLocaleString()}
            />
          ))}
        </ul>
      </div>

      <Footer />
      <NavBar />
    </main>
  );
}
